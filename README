This is not a step by step guide for building the seed project. Some tweaks might be needed to make it work.
The following setup information is mere notes for building it.

Setup
====================================================

IDE: 
Eclipse Java EE IDE for Web Developers
Version: Mars.1 Release (4.5.1)

Project template:
Use Maven to create the project template. (File -> New -> Maven Project -> maven-archetype-webapp)

Server:
Tomcat v8.0.29 server 

Directory Organization:

Front end: 
1. go to webapp directory
	$ cd /path-to-your-project-dir/src/main/webapp/
2. install bower globally
	$ npm install -g bower
3. initialize bower for current project
	$ bower init
4. install angularjs
	$ bower install angular --save
5. install bootstrap
	$ bower install bootstrap --save
6. install ng-resouce
	$ bower install angular-resource --save
7. install ngRoute
	$ bower install angular-route --save


Back end:
1. update pom.xml to include the following dependencies: project -> dependencies

	<dependency>
    	<groupId>com.sun.jersey</groupId>
    	<artifactId>jersey-server</artifactId>
    	<version>1.17.1</version>
	</dependency>
	<dependency>
	    <groupId>com.sun.jersey</groupId>
    	<artifactId>jersey-servlet</artifactId>
    	<version>1.17.1</version>
	</dependency>
	<dependency>
    	<groupId>com.sun.jersey</groupId>
    	<artifactId>jersey-json</artifactId>
    	<version>1.17.1</version>
	</dependency>
	<dependency>
		<groupId>com.google.inject</groupId>
		<artifactId>guice</artifactId>
		<version>3.0-rc3</version>
	</dependency>

2. update web.xml to include the following:

	<servlet>
    	<servlet-name>jersey-serlvet</servlet-name>

    	<servlet-class>
        	com.sun.jersey.spi.container.servlet.ServletContainer
    	</servlet-class>

	    <init-param>
    	    <param-name>com.sun.jersey.config.property.packages</param-name>
        	<param-value>ngdemo.rest</param-value>
	    </init-param>

    	<init-param>
        	<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
        	<param-value>true</param-value>
    	</init-param>

    	<load-on-startup>1</load-on-startup>
	</servlet>

<servlet-mapping>
    <servlet-name>jersey-serlvet</servlet-name>
    <url-pattern>/rest/*</url-pattern>
</servlet-mapping>


Test
-----
Open a browser and put the following ulr in the location bar:
	http://localhost:8080/nameOfYourProjectInEclipse 
	


TODO
-----
1. add MySQL database to store data
2. implement RESTful API using JAVA
3. implement CRUD in Angular using RESTful API
4. build the project from scratch to make use the setup section is accurate. 

References
-----------
The seed project is built by following two tutorials:
www.draptik.github.io/blog/2013/07/13/angularjs-example-using-a-java-restful-web-service
http://draptik.github.io/blog/2013/07/28/restful-crud-with-angularjs/

https://github.com/draptik/angulardemorestful/releases/tag/step1
https://github.com/draptik/angulardemorestful 
